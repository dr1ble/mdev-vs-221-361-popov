<Window x:Class="TimeTrainer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TimeTrainer"
        xmlns:vm="clr-namespace:TimeTrainer.ViewModels"
        xmlns:controls="clr-namespace:TimeTrainer.Controls"
        mc:Ignorable="d"
        Title="Тренажер времени" Height="700" Width="900"
        MinHeight="970" MinWidth="900"
        Background="#F0F0F0">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- Стили для элементов интерфейса -->
        <Style x:Key="ModeButtonStyle" TargetType="RadioButton">
            <Setter Property="Margin" Value="8,5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#B0B0B0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
            <Setter Property="Foreground" Value="#1E3A8A"/>
        </Style>

        <Style x:Key="NumberButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#E2E8F0"/>
            <Setter Property="BorderBrush" Value="#94A3B8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#CBD5E1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#94A3B8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#3B82F6"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2563EB"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1D4ED8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#94A3B8"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- ИЗМЕНЕНИЕ: Padding="20,10,20,20" - верхний отступ уменьшен до 10 -->
    <Border Padding="20,10,20,20" Background="White"> 
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Выбор режима -->
                <RowDefinition Height="*"/>    <!-- Основной контент -->
                <RowDefinition Height="Auto"/> <!-- Кнопки/Обратная связь для режима тестирования -->
            </Grid.RowDefinitions>

            <!-- Выбор режима -->
            <Border Grid.Row="0" Background="#F8FAFC" BorderBrush="#E2E8F0" BorderThickness="0,0,0,1" Padding="10" Margin="0,0,0,20">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Content="Режим обучения (Покажите время)" GroupName="Mode" Style="{StaticResource ModeButtonStyle}"
                                 IsChecked="{Binding CurrentMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vm:GameMode.Learning}}"/>
                    <RadioButton Content="Режим проверки (Сколько минут прошло?)" GroupName="Mode" Style="{StaticResource ModeButtonStyle}"
                                 IsChecked="{Binding CurrentMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vm:GameMode.Testing}}"/>
                </StackPanel>
            </Border>

            <!-- Основной контент -->
            <Grid Grid.Row="1">
                <!-- Режим обучения -->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                            Visibility="{Binding IsLearningModeActive, Converter={StaticResource BoolToVis}}">
                    <TextBlock Text="Покажите время" Style="{StaticResource HeaderTextStyle}"/>
                    <TextBlock Text="{Binding TargetTimeDisplayString}" FontSize="42" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,30" TextWrapping="Wrap" TextAlignment="Center"/>
                    <Border BorderBrush="#E2E8F0" BorderThickness="1" CornerRadius="10" Padding="20">
                        <controls:AnalogClockControl Time="{Binding LearningClockTime, Mode=TwoWay}" Width="350" Height="350" IsReadOnly="False"/>
                    </Border>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                        <Button Content="ПРОВЕРИТЬ" Command="{Binding CheckLearningTimeCommand}" Style="{StaticResource ActionButtonStyle}" 
                                Visibility="{Binding IsCheckButtonVisible, Converter={StaticResource BoolToVis}}" Margin="5,0"/>
                        <Button Content="ДАЛЕЕ" Command="{Binding NextLearningTaskCommand}" Style="{StaticResource ActionButtonStyle}" 
                                Visibility="{Binding ShowNextButton, Converter={StaticResource BoolToVis}}" Margin="5,0"/>
                    </StackPanel>
                    <TextBlock Text="{Binding FeedbackMessage}" FontSize="18" FontWeight="SemiBold" HorizontalAlignment="Center" Margin="0,15,0,0" TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/> <!-- По умолчанию видим, если есть текст -->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FeedbackMessage}" Value="{x:Null}"> <!-- Скрываем, если null -->
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage}" Value=""> <!-- Скрываем, если пустая строка -->
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage, Converter={StaticResource StringStartsWithConverter}, ConverterParameter='Отлично'}" Value="True">
                                        <Setter Property="Foreground" Value="#047857"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage, Converter={StaticResource StringStartsWithConverter}, ConverterParameter='Попробуйте'}" Value="True">
                                        <Setter Property="Foreground" Value="#B91C1C"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!-- Режим тестирования -->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                            Visibility="{Binding IsTestingModeActive, Converter={StaticResource BoolToVis}}">
                    <TextBlock Text="Сколько минут прошло?" Style="{StaticResource HeaderTextStyle}"/>

                    <Grid Margin="0,0,0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Margin="10,0,30,0">
                            <TextBlock Text="ДО" HorizontalAlignment="Center" FontWeight="SemiBold" FontSize="16" Margin="0,0,0,5"/>
                            <Border BorderBrush="#E2E8F0" BorderThickness="1" CornerRadius="10" Padding="15">
                                <controls:AnalogClockControl Time="{Binding StartTime}" IsReadOnly="True" Width="220" Height="220"/>
                            </Border>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Margin="30,0,10,0">
                            <TextBlock Text="ПОСЛЕ" HorizontalAlignment="Center" FontWeight="SemiBold" FontSize="16" Margin="0,0,0,5"/>
                            <Border BorderBrush="#E2E8F0" BorderThickness="1" CornerRadius="10" Padding="15">
                                <controls:AnalogClockControl Time="{Binding EndTime}" IsReadOnly="True" Width="220" Height="220"/>
                            </Border>
                        </StackPanel>
                    </Grid>

                    <Border Background="#F1F5F9" BorderBrush="#CBD5E1" BorderThickness="1" CornerRadius="10" Padding="15" Margin="0,10">
                        <StackPanel>
                            <TextBlock Text="Введите количество минут:" FontSize="16" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                            <TextBox Text="{Binding ElapsedMinutesInput, UpdateSourceTrigger=PropertyChanged}" 
                                     Width="120" FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" 
                                     TextAlignment="Center" Margin="0,0,0,15" IsReadOnly="True" 
                                     Background="White" BorderBrush="#94A3B8" Padding="5"/>

                            <UniformGrid Columns="3" Width="210" Height="250" HorizontalAlignment="Center">
                                <Button Content="1" Command="{Binding AddInputCommand}" CommandParameter="1" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="2" Command="{Binding AddInputCommand}" CommandParameter="2" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="3" Command="{Binding AddInputCommand}" CommandParameter="3" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="4" Command="{Binding AddInputCommand}" CommandParameter="4" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="5" Command="{Binding AddInputCommand}" CommandParameter="5" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="6" Command="{Binding AddInputCommand}" CommandParameter="6" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="7" Command="{Binding AddInputCommand}" CommandParameter="7" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="8" Command="{Binding AddInputCommand}" CommandParameter="8" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="9" Command="{Binding AddInputCommand}" CommandParameter="9" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content=" " IsEnabled="False" Visibility="Hidden"/>
                                <Button Content="0" Command="{Binding AddInputCommand}" CommandParameter="0" Style="{StaticResource NumberButtonStyle}"/>
                                <Button Content="⌫" Command="{Binding AddInputCommand}" CommandParameter="DEL" Style="{StaticResource NumberButtonStyle}"/>
                            </UniformGrid>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>

            <!-- Кнопки/Обратная связь для режима тестирования -->
            <Border Grid.Row="2" Background="#F8FAFC" BorderBrush="#E2E8F0" BorderThickness="0,1,0,0" Padding="15,10" Margin="0,15,0,0"
                    Visibility="{Binding IsTestingModeActive, Converter={StaticResource BoolToVis}}">
                <StackPanel HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                        <Button Content="ПРОВЕРИТЬ" Command="{Binding CheckAnswerCommand}" Style="{StaticResource ActionButtonStyle}" Margin="5,0"/>
                        <Button Content="СЛЕДУЮЩИЙ ПРИМЕР" Command="{Binding GenerateNewProblemCommand}" Style="{StaticResource ActionButtonStyle}" Margin="5,0"/>
                    </StackPanel>
                    <TextBlock Text="{Binding FeedbackMessage}" FontSize="18" FontWeight="SemiBold" HorizontalAlignment="Center" Margin="0,5,0,0" TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FeedbackMessage}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage, Converter={StaticResource StringStartsWithConverter}, ConverterParameter='Правильно'}" Value="True">
                                        <Setter Property="Foreground" Value="#047857"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage, Converter={StaticResource StringStartsWithConverter}, ConverterParameter='Неверно'}" Value="True">
                                        <Setter Property="Foreground" Value="#B91C1C"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FeedbackMessage, Converter={StaticResource StringStartsWithConverter}, ConverterParameter='Попробуйте'}" Value="True">
                                        <Setter Property="Foreground" Value="#B91C1C"/> 
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>