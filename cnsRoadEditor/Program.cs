using System;
using System.IO;

namespace cnsRoadEditor
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = System.Text.Encoding.UTF8;

            Console.WriteLine("Редактор дорог CNS");
            Console.WriteLine("---------------");

            // --- 1. Создаем карту и рисуем на ней ---
            RoadMap mainRoadMap = new RoadMap(30, 20);

            // ... (код для рисования mainRoadMap остается таким же) ...
            mainRoadMap.DrawRectangleOutline(2, 2, 8, 12);
            mainRoadMap.DrawLine(5, 2, 5, 13);
            mainRoadMap.DrawLine(2, 7, 9, 7);
            mainRoadMap.DrawLine(5, 0, 5, 2);
            mainRoadMap.DrawLine(5, 13, 5, 15);
            mainRoadMap.DrawLine(0, 7, 2, 7);
            mainRoadMap.DrawLine(9, 7, 11, 7);
            int centerX = 22;
            int centerY = 6;
            mainRoadMap.DrawLine(centerY - 2, centerX - 1, centerY - 2, centerX + 1);
            mainRoadMap.DrawLine(centerY + 2, centerX - 1, centerY + 2, centerX + 1);
            mainRoadMap.DrawLine(centerY - 1, centerX - 2, centerY + 1, centerX - 2);
            mainRoadMap.DrawLine(centerY - 1, centerX + 2, centerY + 1, centerX + 2);
            mainRoadMap.SetCellState(centerY - 2, centerX - 2, true);
            mainRoadMap.SetCellState(centerY - 2, centerX + 2, true);
            mainRoadMap.SetCellState(centerY + 2, centerX - 2, true);
            mainRoadMap.SetCellState(centerY + 2, centerX + 2, true);
            mainRoadMap.DrawLine(centerY, centerX - 5, centerY, centerX - 2);
            mainRoadMap.DrawLine(centerY, centerX + 2, centerY, centerX + 5);
            mainRoadMap.DrawLine(centerY - 5, centerX, centerY - 2, centerX);
            mainRoadMap.DrawLine(centerY + 2, centerX, centerY + 5, centerX);
            mainRoadMap.DrawLine(13, 2, 13, 28);
            mainRoadMap.DrawLine(11, 5, 13, 5);
            mainRoadMap.DrawLine(10, 10, 13, 10);
            mainRoadMap.DrawLine(11, 15, 13, 15);
            mainRoadMap.DrawLine(13, 7, 15, 7);
            mainRoadMap.DrawLine(13, 12, 16, 12);
            mainRoadMap.DrawLine(13, 17, 15, 17);
            mainRoadMap.DrawLine(11, 25, 13, 25);
            mainRoadMap.DrawLine(11, 25, 11, 28);
            mainRoadMap.DrawLine(11, 28, 13, 28);


            // --- 2. Вывод базовой карты в консоль ---
            Console.WriteLine("\n--- Базовая карта (логические данные) ---");
            mainRoadMap.PrintToConsole('█', '.');

            // --- 3. Преобразование в стандартную символьную карту и вывод (для mainRoadMap) ---
            Console.WriteLine("\n--- Символьная карта (стандартная для основной карты) ---");
            char[,] symbolRepresentationMap = mainRoadMap.ConvertToSymbolMap();
            RoadMap.PrintSymbolMapToConsole(symbolRepresentationMap);

            // --- 3.Б Преобразование ОСНОВНОЙ карты дорог в детализированную спрайтовую карту символов (3x3 блоки) ---
            Console.WriteLine("\n--- Детализированная символьная карта (3x3 блоки для основной карты) ---");
            char[,] detailedSymbolMap = mainRoadMap.ConvertToDetailedSymbolMap();
            RoadMap.PrintSymbolMapToConsole(detailedSymbolMap);
            // --- КОНЕЦ РАЗДЕЛА ДЕТАЛИЗИРОВАННОЙ КАРТЫ ДЛЯ mainRoadMap ---

            // --- 4. Сохранение и Загрузка ---
            string mapFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "my_road_map_data.json");
            Console.WriteLine($"\n--- Сохранение карты в {mapFilePath} ---");
            mainRoadMap.SaveToFile(mapFilePath);

            Console.WriteLine("\n--- Загрузка карты из файла ---");
            RoadMap loadedRoadMap = RoadMap.LoadFromFile(mapFilePath);
            if (loadedRoadMap != null)
            {
                Console.WriteLine("Карта успешно загружена. Вывод стандартной символьной карты загруженной карты:");
                RoadMap.PrintSymbolMapToConsole(loadedRoadMap.ConvertToSymbolMap());
            }
            else
            {
                Console.WriteLine("Не удалось загрузить карту.");
            }

            // --- 5. Пример автоматической генерации с настраиваемыми параметрами ---
            int gridMapWidth = 18;
            int gridMapHeight = 6;
            int numHorizontalGridRoads = 2;
            int numVerticalGridRoads = 4;
            Console.WriteLine($"\n--- Автоматически сгенерированная сеточная карта ({gridMapWidth}x{gridMapHeight} с {numHorizontalGridRoads} гориз., {numVerticalGridRoads} верт. дорогами) ---");
            RoadMap autoGeneratedGridMap = new RoadMap(gridMapWidth, gridMapHeight);
            autoGeneratedGridMap.AutoGenerateGridRoads(numHorizontalGridRoads, numVerticalGridRoads);
            RoadMap.PrintSymbolMapToConsole(autoGeneratedGridMap.ConvertToSymbolMap());

            int randomMapWidth = 22;
            int randomMapHeight = 8;
            int numRandomRoads = 12;
            int maxRandomRoadLength = 5;
            Console.WriteLine($"\n--- Автоматически сгенерированная случайная карта ({randomMapWidth}x{randomMapHeight}, {numRandomRoads} дорог, макс. длина {maxRandomRoadLength}) ---");
            RoadMap autoGeneratedRandomMap = new RoadMap(randomMapWidth, randomMapHeight);
            autoGeneratedRandomMap.AutoGenerateRandomRoads(numRandomRoads, maxRandomRoadLength);
            RoadMap.PrintSymbolMapToConsole(autoGeneratedRandomMap.ConvertToSymbolMap());


            // --- 6. Преобразование в карту спрайтов изображений ---
            string roadSpriteSheetPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Assets", "preview_22.jpg");

            if (File.Exists(roadSpriteSheetPath))
            {
                // Изображение для основной карты (mainRoadMap)
                Console.WriteLine("\n--- Генерация карты спрайтов изображений для ОСНОВНОЙ карты ---");
                string mainMapImageFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "main_road_map_image.png");
                if (mainRoadMap != null)
                {
                    mainRoadMap.ConvertToImageSpriteMap(mainMapImageFilePath, roadSpriteSheetPath);
                }

                // Изображение для случайно сгенерированной карты (autoGeneratedRandomMap)
                Console.WriteLine("\n--- Генерация карты спрайтов изображений для СЛУЧАЙНОЙ карты ---");
                string randomMapImageFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "random_road_map_image.png");
                if (autoGeneratedRandomMap != null)
                {
                    autoGeneratedRandomMap.ConvertToImageSpriteMap(randomMapImageFilePath, roadSpriteSheetPath);
                }
                else // Хотя по логике autoGeneratedRandomMap всегда будет создан
                {
                    Console.WriteLine("Случайная карта не была сгенерирована, пропуск генерации изображения для нее.");
                }
            }
            else
            {
                Console.WriteLine($"Спрайт-лист не найден по пути: {roadSpriteSheetPath}. Пропуск генерации изображений.");
                Console.WriteLine($"Ожидаемый путь к спрайт-листу: {Path.GetFullPath(roadSpriteSheetPath)}");
                Console.WriteLine("Поместите файл 'preview_22.jpg' в папку 'Assets' рядом с исполняемым файлом программы, или укажите корректный путь.");
            }

            Console.WriteLine("\nНажмите любую клавишу для выхода.");
            Console.ReadKey();
        }
    }
}